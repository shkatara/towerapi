---
- name: run the playbook
  hosts: localhost
  gather_facts: false
  vars: 
    start: "2022-04-14"
    end: "2022-04-18"
    no_of_pages: 1.0
  vars_files:
    - vars.yml
  tasks:

    - name: set dates with time
      set_fact:
        start_date_time: "{{start}}T00:00:01"
        end_date_time: "{{end}}T23:59:59"


    - name: Queue build for getting count of jobs in ansible tower
      uri:
        url: https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}
        user: "{{tower_user}}"
        password: "{{tower_pass}}"
        method: GET
        validate_certs: false
        force_basic_auth: yes
        status_code: 200
        return_content: true
      register: for_count
      no_log: true
    
    - name: Print Total no of jobs
      debug:
        msg: The total no of jobs are  {{for_count.json.count}}
 
    - name: calculate no of pages given page size is 200
      set_fact:
        no_of_pages: "{{ for_count.json.count / 200 }}"

    - name: set no of pages if more than 1 needed
      set_fact:
        no_of_pages: "{{no_of_pages|float|round(0,'ceil')}}"
      when: no_of_pages|float > 1.0
      
    - name: set no of pages if 1 needed
      set_fact:
        no_of_pages: 1
      when: no_of_pages|float < 1.0

    - name: print the no of pages
      debug:
        msg: no of pages needed are {{no_of_pages}}

    #- name: Query within Ansible tower for reporting if page needed is 1
    #  uri:
    #    url: https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}&page_size=200&page=1
    #    user: "{{tower_user}}"
    #    password: "{{tower_pass}}"
    #    method: GET
    #    validate_certs: false
    #    force_basic_auth: yes
    ##    status_code: 200
     #   return_content: true
     # register: towerapi
     # when: no_of_pages <= "1.0"

    - name: Query within Ansible tower for reporting
      uri:
        url: https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}&page_size=200&page={{item}}
        user: "{{tower_user}}"
        password: "{{tower_pass}}"
        method: GET
        validate_certs: false
        force_basic_auth: yes
        status_code: 200
        return_content: true
      register: towerapi
      with_sequence: start=1 end={{no_of_pages|int}}
      no_log: true  
    - name: template job_id
      template:
        src: job_id.j2
        dest: jobid.yml
    
    - name: include variable
      include_vars: jobid.yml

    - name: get the host information
      uri:
        url: https://ansible.novartis.intra/api/v2/jobs/{{item}}/job_host_summaries
        user: "{{tower_user}}"
        password: "{{tower_pass}}"
        method: GET
        validate_certs: false
        force_basic_auth: yes
        status_code: 200
        return_content: true
      loop: "{{job_id}}"
      register: vardata
      no_log: true
    
    - name: template
      template:
        src: template.j2
        dest: per-host-timeframe.csv

    - name: send email as attachment
      mail: 
        host: mail.novartis.com
        port: 25
        from: runbook.automation@novartis.com
        to: "{{mail_reciever}}"
        subject: Ansible Tower Job Report from {{start}} to {{end}}
        attach:
          - per-host-timeframe.csv
      

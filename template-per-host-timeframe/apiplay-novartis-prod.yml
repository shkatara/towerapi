---
- name: run the playbook
  hosts: localhost
  gather_facts: false
  vars: 
    start: "2022-04-14"
    end: "2022-04-18"
  vars_files:
    - vars.yml
  tasks:
    - name: set empty list for job ids
      set_fact: 
        job_id: []


    - name: set dates with time
      set_fact:
        start_date_time: "{{start}}T00:00:01"
        end_date_time: "{{start}}T23:59:59"


    - name: Queue build for getting count of jobs in ansible tower
      uri:
        url: https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}
        user: "{{tower_user}}"
        password: "{{tower_pass}}"
        method: GET
        validate_certs: false
        force_basic_auth: yes
        status_code: 200
        return_content: true
      register: for_count
      no_log: true

    - name: print query   
      debug:
        msg: count is {{for_count.json.count}} and url is https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}&page_size={{for_count.json.count}}
   
#    - name: Query within Ansible tower for reporting
#      uri:
#        url: https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}&page_size={{for_count.json.count}}
#        user: "{{tower_user}}"
#        password: "{{tower_pass}}"
#        method: GET
#        validate_certs: false
#        force_basic_auth: yes
#        status_code: 200
#        return_content: true
#      register: towerapi
#      no_log: true
#    - name: append
#      set_fact:
#        job_id : "{{ job_id + [item.id]  }}"
#      loop: "{{towerapi.json.results}}"
#      no_log: true
#    - name: get the host information
#      uri:
#        url: https://ansible.novartis.intra/api/v2/jobs/{{item}}/job_host_summaries
#        user: "{{tower_user}}"
#        password: "{{tower_pass}}"
#        method: GET
#        validate_certs: false
#        force_basic_auth: yes
#        status_code: 200
#        return_content: true
#      loop: "{{job_id}}"
#      register: vardata
#      no_log: true
#    - name: template
#      template:
#        src: template.j2
#        dest: per-host-timeframe.csv

#    - name: send email as attachment
#      mail: 
#        host: mail.novartis.com
#        port: 25
#        from: runbook.automation@novartis.com
#        to: "{{mail_reciever}}"
#        subject: Ansible Tower Job Report from {{start_date_time}} to {{end_date_time}} || https://ansible.novartis.intra/api/v2/jobs?started__gte={{start_date_time}}&finished__lte={{end_date_time}}&page_size={{for_count.json.count}}
#        attach:
#          - per-host-timeframe.csv
#      no_log: true
